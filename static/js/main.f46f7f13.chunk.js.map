{"version":3,"sources":["Component/quote.js","App.js","index.js"],"names":["Quotes","props","state","quote","author","loading","changeQuote","bind","fetch","response","json","data","localData","map","obj","push","localDataRandom","max","Math","floor","random","getRandomInt","length","this","setState","className","onClick","React","Component","App","ReactDOM","render","document","getElementById"],"mappings":"6PAIqBA,G,wDACnB,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQ,CACXC,MAAO,KACPC,OAAQ,KACRC,SAAS,GAEX,EAAKC,YAAc,EAAKA,YAAYC,KAAjB,gBAPF,E,4LAWf,wI,SACqBC,MADrB,yI,cACIC,E,gBACaA,EAASC,O,OAAtBC,E,OACAC,EAAY,GAClBD,EAAKE,KAAI,SAACC,GAAD,OAASF,EAAUG,KAAKD,MAE3BE,EAAkBJ,EADH,SAACK,GAAD,OAASC,KAAKC,MAAMD,KAAKE,SAAWF,KAAKC,MAAMF,IAClCI,CAAaT,EAAUU,OAAS,IAClEC,KAAKC,SAAS,CACZrB,MAAOa,EAAgBb,MACvBC,OAAQY,EAAgBZ,OACxBC,SAAS,I,uQAKT,wI,SACqBG,MADrB,yI,cACIC,E,gBACaA,EAASC,O,OAAtBC,E,OACAC,EAAY,GAClBD,EAAKE,KAAI,SAACC,GAAD,OAASF,EAAUG,KAAKD,MAE3BE,EAAkBJ,EADH,SAACK,GAAD,OAASC,KAAKC,MAAMD,KAAKE,SAAWF,KAAKC,MAAMF,IAClCI,CAAaT,EAAUU,OAAS,IAClEC,KAAKC,SAAS,CACZrB,MAAOa,EAAgBb,MACvBC,OAAQY,EAAgBZ,OACxBC,SAAS,I,sIAKX,OAAIkB,KAAKrB,MAAMG,QACN,2CAEJkB,KAAKrB,MAAMC,MAId,yBAAKsB,UAAU,UACb,6BAAMF,KAAKrB,MAAMC,OACjB,mCAASoB,KAAKrB,MAAME,QACpB,4BAAQsB,QAASH,KAAKjB,aAAtB,iBANK,0D,GA9CuBqB,IAAMC,YCO3BC,MARf,WACE,OACE,6BACE,kBAAC,EAAD,QCFNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.f46f7f13.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"../style.css\";\r\n\r\n//   IMPORTANT: FORK THE API TO MY REPO\r\nexport default class Quotes extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      quote: null,\r\n      author: null,\r\n      loading: true,\r\n    };\r\n    this.changeQuote = this.changeQuote.bind(this);\r\n  }\r\n  async componentDidMount() {\r\n    const url =\r\n      \"https://gist.githubusercontent.com/jangdiep/7edec090b43f651285b126f313ff40f7/raw/f4231cd5961f026264bb6bb3a6c41671b044f1f4/quotes.json\";\r\n    const response = await fetch(url);\r\n    const data = await response.json();\r\n    const localData = [];\r\n    data.map((obj) => localData.push(obj));\r\n    const getRandomInt = (max) => Math.floor(Math.random() * Math.floor(max));\r\n    const localDataRandom = localData[getRandomInt(localData.length - 1)];\r\n    this.setState({\r\n      quote: localDataRandom.quote,\r\n      author: localDataRandom.author,\r\n      loading: false,\r\n    });\r\n  }\r\n  async changeQuote() {\r\n    const url =\r\n      \"https://gist.githubusercontent.com/jangdiep/7edec090b43f651285b126f313ff40f7/raw/f4231cd5961f026264bb6bb3a6c41671b044f1f4/quotes.json\";\r\n    const response = await fetch(url);\r\n    const data = await response.json();\r\n    const localData = [];\r\n    data.map((obj) => localData.push(obj));\r\n    const getRandomInt = (max) => Math.floor(Math.random() * Math.floor(max));\r\n    const localDataRandom = localData[getRandomInt(localData.length - 1)];\r\n    this.setState({\r\n      quote: localDataRandom.quote,\r\n      author: localDataRandom.author,\r\n      loading: false,\r\n    });\r\n  }\r\n\r\n  render() {\r\n    if (this.state.loading) {\r\n      return <div>loading...</div>;\r\n    }\r\n    if (!this.state.quote) {\r\n      return <div>Can't find any quotes</div>;\r\n    }\r\n    return (\r\n      <div className=\"center\">\r\n        <div>{this.state.quote}</div>\r\n        <div> - {this.state.author}</div>\r\n        <button onClick={this.changeQuote}>Random Quote</button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\nimport Quotes from \"./Component/quote\";\n\nfunction App() {\n  return (\n    <div>\n      <Quotes />\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}